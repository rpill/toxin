$color-dark: #1f2041;
$color-dark-75: rgba($color-dark, 0.75);
$color-dark-50: rgba($color-dark, 0.50);
$color-dark-25: rgba($color-dark, 0.25);
$color-dark-10: rgba($color-dark, 0.1);
$color-dark-5: rgba($color-dark, 0.05);
$color-primary: #bc9cff;
$color-secondary: #6fcf97;
$color-tertiary: #8ba4f9;

$font-body: 'Montserrat', 'Arial', sans-serif;
$text-font-size: 14px;
$text-line-height: 24px;

$max-row-width: 1210px;

$border-radius: 4px;
$box-shadow: 0px 10px 20px rgba(31, 32, 65, 0.05);
$gradient-primary: linear-gradient(180deg, $color-primary 0%, $color-tertiary 100%);
$default-transition: .3s ease-in-out;


$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1600px
);

@mixin respond-up($breakpoint) {
  @if map-has-key($grid-breakpoints, $breakpoint) {
    @media (min-width: map-get($grid-breakpoints, $breakpoint)) {
      @content;
    }
  }
 
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($grid-breakpoints)}.";
  }
}

@mixin respond-down($breakpoint) {
  @if map-has-key($grid-breakpoints, $breakpoint) {
    @media (max-width: map-get($grid-breakpoints, $breakpoint) - 1px) {
      @content;
    }
  }
 
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($grid-breakpoints)}.";
  }
}

@function HexToRGB($hex) {
  @return red($hex), green($hex), blue($hex);
}

@mixin arrow-down {
    content: '';

    display: block;
    width: 7px;
    height: 7px;

    border-color: $color-dark-50;
    border-style: solid;
    border-width: 0 2px 2px 0;

    transform: translateY(-2px) rotate(45deg);

    transition: border-color $default-transition;
}